name: CI Actions  # don't edit while the badge was depend on this

on:
  push:
    branches:
      - master
      - release/**
  pull_request:
    branches:
      - master
      - release/**

jobs:
  lint-test:
    name: Lint/Test
    strategy:
      matrix:
        node-version: [10.x]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org
          scope: '@aftership'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Caceh dependencies
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: test
        run: yarn test

      - name: Fix code coverage paths
        working-directory: ./coverage
        run: |
          sed -i 's/\/home\/runner\/work\/swagger-ajv\/swagger-ajv\//\/github\/workspace\//g' lcov.info

      - name: SonarQube scan on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/__tests__/**,node_modules/**,scripts/**,**/__mocks__/**,**/__fixtures__/**
            -Dsonar.projectKey=swagger-ajv
            -Dsonar.pullrequest.provider=github
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=PR
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.qualitygate.wait=false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get branch name (merge)
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: SonarQube scan on Push
        if: ${{ github.event_name != 'pull_request' }}
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/__tests__/**,node_modules/**,scripts/**,**/__mocks__/**,**/__fixtures__/**
            -Dsonar.projectKey=swagger-ajv
            -Dsonar.pullrequest.provider=github
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.branch.name=${{ env.BRANCH_NAME }}
            -Dsonar.qualitygate.wait=false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
